{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"name\", \"size\", \"color\", \"backgroundColor\", \"changeIconLibrary\", \"onPress\", \"marginRight\", \"iconWithRoundBackground\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { MaterialCommunityIcons, FontAwesome5 } from \"@expo/vector-icons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nfunction Icon(_ref) {\n  var _ref$name = _ref.name,\n      name = _ref$name === void 0 ? \"email\" : _ref$name,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 40 : _ref$size,\n      _ref$color = _ref.color,\n      color = _ref$color === void 0 ? \"white\" : _ref$color,\n      _ref$backgroundColor = _ref.backgroundColor,\n      backgroundColor = _ref$backgroundColor === void 0 ? \"black\" : _ref$backgroundColor,\n      _ref$changeIconLibrar = _ref.changeIconLibrary,\n      changeIconLibrary = _ref$changeIconLibrar === void 0 ? false : _ref$changeIconLibrar,\n      onPress = _ref.onPress,\n      _ref$marginRight = _ref.marginRight,\n      marginRight = _ref$marginRight === void 0 ? 0 : _ref$marginRight,\n      _ref$iconWithRoundBac = _ref.iconWithRoundBackground,\n      iconWithRoundBackground = _ref$iconWithRoundBac === void 0 ? false : _ref$iconWithRoundBac,\n      style = _objectWithoutProperties(_ref, _excluded);\n\n  return _jsx(_Fragment, {\n    children: iconWithRoundBackground ? _jsx(View, {\n      style: [styles.icon, {\n        backgroundColor: backgroundColor\n      }, {\n        marginRight: marginRight\n      }, {\n        width: size\n      }, {\n        height: size\n      }, {\n        borderRadius: size\n      }],\n      children: changeIconLibrary ? _jsx(FontAwesome5, _objectSpread(_objectSpread({}, style), {}, {\n        name: name,\n        size: size * 0.5,\n        color: color\n      })) : _jsx(MaterialCommunityIcons, {\n        onPress: onPress,\n        name: name,\n        size: size * 0.5,\n        color: color\n      })\n    }) : _jsx(_Fragment, {\n      children: changeIconLibrary ? _jsx(FontAwesome5, _objectSpread(_objectSpread({}, style), {}, {\n        name: name,\n        size: size,\n        color: color,\n        onPrpess: onPress\n      })) : _jsx(MaterialCommunityIcons, _objectSpread(_objectSpread({}, style), {}, {\n        onPress: onPress,\n        name: name,\n        size: size,\n        color: color\n      }))\n    })\n  });\n}\n\nvar styles = StyleSheet.create({\n  icon: {\n    width: 40,\n    height: 40,\n    borderRadius: 40 / 2,\n    backgroundColor: \"black\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginRight: 0\n  }\n});\nexport default Icon;","map":{"version":3,"sources":["C:/Users/tonyj/Desktop/Mobile App/MyMemories/src/Components/Icon/Icon.js"],"names":["React","MaterialCommunityIcons","FontAwesome5","Icon","name","size","color","backgroundColor","changeIconLibrary","onPress","marginRight","iconWithRoundBackground","style","styles","icon","width","height","borderRadius","StyleSheet","create","justifyContent","alignItems"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,sBAAT,EAAiCC,YAAjC,QAAqD,oBAArD;;;;AAEA,SAASC,IAAT,OAYG;AAAA,uBAXDC,IAWC;AAAA,MAXDA,IAWC,0BAXM,OAWN;AAAA,uBAVDC,IAUC;AAAA,MAVDA,IAUC,0BAVM,EAUN;AAAA,wBATDC,KASC;AAAA,MATDA,KASC,2BATO,OASP;AAAA,kCAPDC,eAOC;AAAA,MAPDA,eAOC,qCAPiB,OAOjB;AAAA,mCANDC,iBAMC;AAAA,MANDA,iBAMC,sCANmB,KAMnB;AAAA,MALDC,OAKC,QALDA,OAKC;AAAA,8BAJDC,WAIC;AAAA,MAJDA,WAIC,iCAJa,CAIb;AAAA,mCAFDC,uBAEC;AAAA,MAFDA,uBAEC,sCAFyB,KAEzB;AAAA,MADEC,KACF;;AACD,SACE;AAAA,cACGD,uBAAuB,GACtB,KAAC,IAAD;AACE,MAAA,KAAK,EAAE,CACLE,MAAM,CAACC,IADF,EAEL;AAAEP,QAAAA,eAAe,EAAEA;AAAnB,OAFK,EAGL;AAAEG,QAAAA,WAAW,EAAEA;AAAf,OAHK,EAIL;AAAEK,QAAAA,KAAK,EAAEV;AAAT,OAJK,EAKL;AAAEW,QAAAA,MAAM,EAAEX;AAAV,OALK,EAML;AAAEY,QAAAA,YAAY,EAAEZ;AAAhB,OANK,CADT;AAAA,gBAUGG,iBAAiB,GAChB,KAAC,YAAD,kCACMI,KADN;AAEE,QAAA,IAAI,EAAER,IAFR;AAGE,QAAA,IAAI,EAAEC,IAAI,GAAG,GAHf;AAIE,QAAA,KAAK,EAAEC;AAJT,SADgB,GAQhB,KAAC,sBAAD;AACE,QAAA,OAAO,EAAEG,OADX;AAEE,QAAA,IAAI,EAAEL,IAFR;AAGE,QAAA,IAAI,EAAEC,IAAI,GAAG,GAHf;AAIE,QAAA,KAAK,EAAEC;AAJT;AAlBJ,MADsB,GA4BtB;AAAA,gBACGE,iBAAiB,GAChB,KAAC,YAAD,kCACMI,KADN;AAEE,QAAA,IAAI,EAAER,IAFR;AAGE,QAAA,IAAI,EAAEC,IAHR;AAIE,QAAA,KAAK,EAAEC,KAJT;AAKE,QAAA,QAAQ,EAAEG;AALZ,SADgB,GAShB,KAAC,sBAAD,kCACMG,KADN;AAEE,QAAA,OAAO,EAAEH,OAFX;AAGE,QAAA,IAAI,EAAEL,IAHR;AAIE,QAAA,IAAI,EAAEC,IAJR;AAKE,QAAA,KAAK,EAAEC;AALT;AAVJ;AA7BJ,IADF;AAoDD;;AACD,IAAMO,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BL,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,EADH;AAEJC,IAAAA,MAAM,EAAE,EAFJ;AAGJC,IAAAA,YAAY,EAAE,KAAK,CAHf;AAIJV,IAAAA,eAAe,EAAE,OAJb;AAKJa,IAAAA,cAAc,EAAE,QALZ;AAMJC,IAAAA,UAAU,EAAE,QANR;AAOJX,IAAAA,WAAW,EAAE;AAPT;AADyB,CAAlB,CAAf;AAYA,eAAeP,IAAf","sourcesContent":["import React from \"react\";\nimport { View, StyleSheet } from \"react-native\";\nimport { MaterialCommunityIcons, FontAwesome5 } from \"@expo/vector-icons\";\n\nfunction Icon({\n  name = \"email\",\n  size = 40,\n  color = \"white\",\n\n  backgroundColor = \"black\",\n  changeIconLibrary = false,\n  onPress,\n  marginRight = 0,\n\n  iconWithRoundBackground = false,\n  ...style\n}) {\n  return (\n    <>\n      {iconWithRoundBackground ? (\n        <View\n          style={[\n            styles.icon,\n            { backgroundColor: backgroundColor },\n            { marginRight: marginRight },\n            { width: size },\n            { height: size },\n            { borderRadius: size },\n          ]}\n        >\n          {changeIconLibrary ? (\n            <FontAwesome5\n              {...style}\n              name={name}\n              size={size * 0.5}\n              color={color}\n            />\n          ) : (\n            <MaterialCommunityIcons\n              onPress={onPress}\n              name={name}\n              size={size * 0.5}\n              color={color}\n            />\n          )}\n        </View>\n      ) : (\n        <>\n          {changeIconLibrary ? (\n            <FontAwesome5\n              {...style}\n              name={name}\n              size={size}\n              color={color}\n              onPrpess={onPress}\n            />\n          ) : (\n            <MaterialCommunityIcons\n              {...style}\n              onPress={onPress}\n              name={name}\n              size={size}\n              color={color}\n            />\n          )}\n        </>\n      )}\n    </>\n  );\n}\nconst styles = StyleSheet.create({\n  icon: {\n    width: 40,\n    height: 40,\n    borderRadius: 40 / 2,\n    backgroundColor: \"black\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginRight: 0,\n  },\n});\n\nexport default Icon;\n"]},"metadata":{},"sourceType":"module"}