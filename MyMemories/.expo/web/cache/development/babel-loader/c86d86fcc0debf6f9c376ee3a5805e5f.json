{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport defaultStyles from \"../config/styles\";\nimport Screen from \"./Screen\";\nimport colors from \"../config/colors\";\nimport AppButton from \"./AppButton\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nfunction AppPicker(_ref) {\n  var icon = _ref.icon,\n      items = _ref.items,\n      placeholder = _ref.placeholder,\n      selectedItem = _ref.selectedItem,\n      onSelectedItem = _ref.onSelectedItem,\n      numberOfColoms = _ref.numberOfColoms,\n      _ref$PickerItemsCompo = _ref.PickerItemsComponent,\n      PickerItemsComponent = _ref$PickerItemsCompo === void 0 ? PickerItems : _ref$PickerItemsCompo,\n      _ref$width = _ref.width,\n      width = _ref$width === void 0 ? \"100%\" : _ref$width;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      ModalVisible = _useState2[0],\n      SetModalVisible = _useState2[1];\n\n  return _jsxs(_Fragment, {\n    children: [_jsx(TouchableWithoutFeedback, {\n      onPress: function onPress() {\n        return SetModalVisible(true);\n      },\n      children: _jsxs(View, {\n        style: [styles.container, {\n          width: width\n        }],\n        children: [icon && _jsx(MaterialCommunityIcons, {\n          name: icon,\n          size: 20,\n          color: defaultStyles.colors.medium,\n          style: styles.icon\n        }), selectedItem ? _jsx(Text, {\n          style: styles.text,\n          children: selectedItem\n        }) : _jsx(Text, {\n          style: styles.placeholder,\n          children: placeholder\n        }), _jsx(MaterialCommunityIcons, {\n          name: \"chevron-down\",\n          size: 20,\n          color: defaultStyles.colors.medium\n        })]\n      })\n    }), _jsx(Modal, {\n      visible: ModalVisible,\n      animationType: \"slide\",\n      children: _jsxs(Screen, {\n        children: [_jsx(FlatList, {\n          data: items,\n          keyExtractor: function keyExtractor(item) {\n            return item.value.toString();\n          },\n          numColumns: numberOfColoms,\n          renderItem: function renderItem(_ref2) {\n            var item = _ref2.item;\n            return _jsx(PickerItemsComponent, {\n              onPress: function onPress() {\n                SetModalVisible(false);\n                onSelectedItem(item.label);\n              },\n              item: item,\n              label: item.label\n            });\n          }\n        }), _jsx(AppButton, {\n          title: \"close\",\n          onPress: function onPress() {\n            return SetModalVisible(false);\n          }\n        })]\n      })\n    })]\n  });\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: defaultStyles.colors.white,\n    borderRadius: 25,\n    flexDirection: \"row\",\n    padding: 15,\n    marginVertical: 10,\n    borderColor: colors.primary,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0.6,\n      height: 0.4\n    },\n    shadowOpacity: 0.2,\n    shadowRadius: 2,\n    elevation: 9,\n    borderRadius: 10,\n    borderWidth: 1\n  },\n  placeholder: {\n    color: defaultStyles.colors.grey,\n    flex: 1\n  },\n  icon: {\n    marginRight: 10\n  },\n  text: {\n    flex: 1,\n    color: colors.black\n  }\n});\nexport default AppPicker;","map":{"version":3,"names":["React","useState","MaterialCommunityIcons","defaultStyles","Screen","colors","AppButton","AppPicker","icon","items","placeholder","selectedItem","onSelectedItem","numberOfColoms","PickerItemsComponent","PickerItems","width","ModalVisible","SetModalVisible","styles","container","medium","text","item","value","toString","label","StyleSheet","create","backgroundColor","white","borderRadius","flexDirection","padding","marginVertical","borderColor","primary","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation","borderWidth","color","grey","flex","marginRight","black"],"sources":["C:/Users/tonyj/Desktop/Mobile App/MyMemories/src/Components/AppPicker.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  View,\n  StyleSheet,\n  TouchableWithoutFeedback,\n  Modal,\n  Button,\n  Text,\n  FlatList,\n} from \"react-native\";\n\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport defaultStyles from \"../config/styles\";\nimport Screen from \"./Screen\";\nimport colors from \"../config/colors\";\nimport AppButton from \"./AppButton\";\n\nfunction AppPicker({\n  icon,\n  items,\n  placeholder,\n  selectedItem,\n  onSelectedItem,\n  numberOfColoms,\n  PickerItemsComponent = PickerItems,\n  width = \"100%\",\n}) {\n  const [ModalVisible, SetModalVisible] = useState(false);\n  //This is custom componet to show and pick the catoegory in modal\n\n  return (\n    <>\n      <TouchableWithoutFeedback onPress={() => SetModalVisible(true)}>\n        <View style={[styles.container, { width }]}>\n          {icon && (\n            <MaterialCommunityIcons\n              name={icon}\n              size={20}\n              color={defaultStyles.colors.medium}\n              style={styles.icon}\n            />\n          )}\n\n          {selectedItem ? (\n            <Text style={styles.text}>{selectedItem}</Text>\n          ) : (\n            <Text style={styles.placeholder}>{placeholder}</Text>\n          )}\n\n          <MaterialCommunityIcons\n            name=\"chevron-down\"\n            size={20}\n            color={defaultStyles.colors.medium}\n          />\n        </View>\n      </TouchableWithoutFeedback>\n\n      <Modal visible={ModalVisible} animationType=\"slide\">\n        <Screen>\n          <FlatList\n            data={items}\n            keyExtractor={(item) => item.value.toString()}\n            numColumns={numberOfColoms}\n            renderItem={({ item }) => (\n              <PickerItemsComponent\n                onPress={() => {\n                  SetModalVisible(false);\n                  onSelectedItem(item.label);\n                }}\n                item={item}\n                label={item.label}\n              />\n            )}\n          />\n          <AppButton title=\"close\" onPress={() => SetModalVisible(false)} />\n        </Screen>\n      </Modal>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: defaultStyles.colors.white,\n    borderRadius: 25,\n    flexDirection: \"row\",\n    padding: 15,\n    marginVertical: 10,\n    borderColor: colors.primary,\n    shadowColor: \"#000\",\n    shadowOffset: { width: 0.6, height: 0.4 },\n    shadowOpacity: 0.2,\n    shadowRadius: 2,\n    elevation: 9,\n    borderRadius: 10,\n    borderWidth: 1,\n  },\n  placeholder: {\n    color: defaultStyles.colors.grey,\n    flex: 1,\n  },\n  icon: {\n    marginRight: 10,\n  },\n  text: {\n    flex: 1,\n    color: colors.black,\n  },\n});\n\nexport default AppPicker;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}