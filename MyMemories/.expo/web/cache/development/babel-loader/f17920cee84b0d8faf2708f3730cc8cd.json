{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport * as yup from \"yup\";\nimport AppForm from \"../Components/AppForm\";\nimport AppFromField from \"../Components/AppFormField\";\nimport CustomText from \"../Components/CustomText\";\nimport Screen from \"../Components/Screen\";\nimport SubmitButton from \"../Components/SubmitButton\";\nimport colors from \"../config/colors\";\nimport fontFamily from \"../config/fontFamily\";\nimport Storage from \"../auth/Storage\";\nimport useAuth from \"../auth/useAuth\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar validationSchema = yup.object().shape({\n  username: yup.string().required().label(\"*Username\"),\n  email: yup.string().required().email().label(\"*Email\"),\n  password: yup.string().required().min(8).label(\"*Password\")\n});\n\nfunction RegisterScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useAuth = useAuth(),\n      logIn = _useAuth.logIn;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      visiblePassword = _useState2[0],\n      setVisiblePassword = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var handleSignUp = function handleSignUp(_ref2) {\n    var username = _ref2.username,\n        email = _ref2.email,\n        password = _ref2.password;\n    setLoading(true);\n    logIn({\n      id: 1,\n      userName: username,\n      email: email,\n      password: password\n    });\n  };\n\n  return _jsx(Screen, {\n    style: styles.container,\n    children: _jsxs(ScrollView, {\n      children: [_jsx(View, {\n        style: styles.welcomeTextContainer,\n        children: _jsx(Image, {\n          resizeMode: \"contain\",\n          style: styles.logo,\n          source: require(\"../assets/logo.png\")\n        })\n      }), _jsx(View, {\n        style: styles.inputFieldContainer,\n        children: _jsxs(AppForm, {\n          initialValues: {\n            username: \"\",\n            email: \"\",\n            password: \"\"\n          },\n          validationSchema: validationSchema,\n          onSubmit: handleSignUp,\n          children: [_jsx(AppFromField, {\n            label: \"UserName\",\n            width: \"95%\",\n            leftIcon: \"user\",\n            changeIconLibrary: true,\n            placeholder: \"Enter username\",\n            autoCapitalize: \"none\",\n            autoCorrect: false,\n            name: \"username\",\n            keyboardType: \"email-address\",\n            TextContentType: \"emailAddress\"\n          }), _jsx(AppFromField, {\n            label: \"Email\",\n            width: \"95%\",\n            leftIcon: \"email\",\n            placeholder: \"Enter Email\",\n            autoCapitalize: \"none\",\n            autoCorrect: false,\n            name: \"email\",\n            keyboardType: \"email-address\",\n            TextContentType: \"emailAddress\"\n          }), _jsx(AppFromField, {\n            onRightIconPress: function onRightIconPress() {\n              return setVisiblePassword(!visiblePassword);\n            },\n            label: \"Password\",\n            width: \"95%\",\n            leftIcon: \"lock\",\n            rightIcon: \"eye\",\n            placeholder: \"Enter Password\",\n            autoCapitalize: \"none\",\n            name: \"password\",\n            autoCorrect: false,\n            secureTextEntry: visiblePassword,\n            TextContentType: \"password\"\n          }), _jsx(SubmitButton, {\n            marginTop: \"10%\",\n            title: \"Register\",\n            loading: loading\n          })]\n        })\n      }), _jsx(TouchableOpacity, {\n        style: {\n          flex: 1,\n          padding: \"5%\"\n        },\n        onPress: function onPress() {\n          navigation.navigate(\"Login\");\n        },\n        children: _jsx(Text, {\n          style: styles.forgetPasswordText,\n          children: \"Already Register? Login Here\"\n        })\n      })]\n    })\n  });\n}\n\nexport default RegisterScreen;\nvar styles = StyleSheet.create({\n  container: {\n    padding: 5,\n    backgroundColor: colors.white,\n    flex: 1\n  },\n  logo: {\n    height: 120,\n    width: 200,\n    marginTop: 7,\n    alignSelf: \"center\",\n    padding: 10\n  },\n  inputFieldContainer: {\n    alignItems: \"center\"\n  },\n  welcomeTextContainer: {\n    marginTop: \"20%\",\n    marginBottom: \"6%\"\n  },\n  icon: {\n    top: 4,\n    marginRight: 10\n  },\n  welcomeText: {\n    fontSize: 22,\n    textAlign: \"center\",\n    color: colors.primary\n  },\n  forgetPasswordText: {\n    top: 15,\n    textAlign: \"center\",\n    color: colors.primary,\n    fontWeight: \"bold\",\n    fontSize: 18,\n    textDecorationLine: \"underline\"\n  },\n  otherSignInOptions: {\n    marginTop: 10,\n    fontSize: 19,\n    textAlign: \"center\"\n  },\n  goToRegister: {\n    marginTop: \"10%\",\n    color: colors.primary,\n    alignSelf: \"center\",\n    fontSize: 19,\n    fontFamily: fontFamily.Poppins_Medium\n  }\n});","map":{"version":3,"names":["React","useState","yup","AppForm","AppFromField","CustomText","Screen","SubmitButton","colors","fontFamily","Storage","useAuth","validationSchema","object","shape","username","string","required","label","email","password","min","RegisterScreen","navigation","logIn","visiblePassword","setVisiblePassword","loading","setLoading","handleSignUp","id","userName","styles","container","welcomeTextContainer","logo","require","inputFieldContainer","flex","padding","navigate","forgetPasswordText","StyleSheet","create","backgroundColor","white","height","width","marginTop","alignSelf","alignItems","marginBottom","icon","top","marginRight","welcomeText","fontSize","textAlign","color","primary","fontWeight","textDecorationLine","otherSignInOptions","goToRegister","Poppins_Medium"],"sources":["C:/Users/tonyj/Desktop/Mobile App/MyMemories/src/Screens/RegisterScreen.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  ScrollView,\n  StyleSheet,\n  TouchableOpacity,\n  Text,\n  Image,\n  View,\n} from \"react-native\";\n\nimport * as yup from \"yup\";\n\nimport AppForm from \"../Components/AppForm\";\nimport AppFromField from \"../Components/AppFormField\";\nimport CustomText from \"../Components/CustomText\";\nimport Screen from \"../Components/Screen\";\n\nimport SubmitButton from \"../Components/SubmitButton\";\n\nimport colors from \"../config/colors\";\nimport fontFamily from \"../config/fontFamily\";\nimport Storage from \"../auth/Storage\";\nimport useAuth from \"../auth/useAuth\";\n\nconst validationSchema = yup.object().shape({\n  username: yup.string().required().label(\"*Username\"),\n  email: yup.string().required().email().label(\"*Email\"),\n  password: yup.string().required().min(8).label(\"*Password\"),\n});\n\nfunction RegisterScreen({ navigation }) {\n  const { logIn } = useAuth();\n  const [visiblePassword, setVisiblePassword] = useState(true);\n  const [loading, setLoading] = useState(false);\n\n  /* Method Handles Sign up */\n  const handleSignUp = ({ username, email, password }) => {\n    setLoading(true);\n    //Storing the user in local storage using custom hook\n    logIn({\n      id: 1,\n      userName: username,\n      email: email,\n      password: password,\n    });\n  };\n\n  return (\n    <Screen style={styles.container}>\n      <ScrollView>\n        <View style={styles.welcomeTextContainer}>\n          <Image\n            resizeMode=\"contain\"\n            style={styles.logo}\n            source={require(\"../assets/logo.png\")}\n          />\n        </View>\n\n        <View style={styles.inputFieldContainer}>\n          <AppForm\n            initialValues={{ username: \"\", email: \"\", password: \"\" }}\n            validationSchema={validationSchema}\n            onSubmit={handleSignUp}\n          >\n            <AppFromField\n              label=\"UserName\"\n              width=\"95%\"\n              leftIcon=\"user\"\n              changeIconLibrary={true}\n              placeholder=\"Enter username\"\n              autoCapitalize=\"none\"\n              autoCorrect={false}\n              name=\"username\"\n              keyboardType=\"email-address\"\n              TextContentType=\"emailAddress\"\n            />\n            <AppFromField\n              label=\"Email\"\n              width=\"95%\"\n              leftIcon=\"email\"\n              placeholder=\"Enter Email\"\n              autoCapitalize=\"none\"\n              autoCorrect={false}\n              name=\"email\"\n              keyboardType=\"email-address\"\n              TextContentType=\"emailAddress\"\n            />\n\n            <AppFromField\n              onRightIconPress={() => setVisiblePassword(!visiblePassword)}\n              label=\"Password\"\n              width=\"95%\"\n              leftIcon=\"lock\"\n              rightIcon=\"eye\"\n              placeholder=\"Enter Password\"\n              autoCapitalize=\"none\"\n              name=\"password\"\n              autoCorrect={false}\n              secureTextEntry={visiblePassword}\n              TextContentType=\"password\"\n            />\n\n            <SubmitButton marginTop=\"10%\" title=\"Register\" loading={loading} />\n          </AppForm>\n        </View>\n        <TouchableOpacity\n          style={{ flex: 1, padding: \"5%\" }}\n          onPress={() => {\n            navigation.navigate(\"Login\");\n          }}\n        >\n          <Text style={styles.forgetPasswordText}>\n            Already Register? Login Here\n          </Text>\n        </TouchableOpacity>\n      </ScrollView>\n    </Screen>\n  );\n}\nexport default RegisterScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 5,\n    backgroundColor: colors.white,\n    flex: 1,\n  },\n  logo: {\n    height: 120,\n    width: 200,\n    marginTop: 7,\n\n    alignSelf: \"center\",\n    padding: 10,\n  },\n  inputFieldContainer: {\n    alignItems: \"center\",\n  },\n  welcomeTextContainer: {\n    marginTop: \"20%\",\n    marginBottom: \"6%\",\n  },\n  icon: {\n    top: 4,\n    marginRight: 10,\n  },\n\n  welcomeText: {\n    fontSize: 22,\n    textAlign: \"center\",\n    color: colors.primary,\n  },\n  forgetPasswordText: {\n    top: 15,\n    textAlign: \"center\",\n    color: colors.primary,\n    fontWeight: \"bold\",\n    fontSize: 18,\n    textDecorationLine: \"underline\",\n  },\n  otherSignInOptions: {\n    marginTop: 10,\n\n    fontSize: 19,\n    textAlign: \"center\",\n  },\n\n  goToRegister: {\n    marginTop: \"10%\",\n    color: colors.primary,\n    alignSelf: \"center\",\n\n    fontSize: 19,\n    fontFamily: fontFamily.Poppins_Medium,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}