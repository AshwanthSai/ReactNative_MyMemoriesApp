{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport * as yup from \"yup\";\nimport colors from \"../config/colors\";\nimport AppFromField from \"../Components/AppFormField\";\nimport CategoryPickerItems from \"../Components/CategoryPickerItems\";\nimport SubmitButton from \"../Components/SubmitButton\";\nimport AppForm from \"../Components/AppForm\";\nimport AppFromPicker from \"../Components/AppFromPicker\";\nimport ImageInput from \"../Components/ImageInput\";\nimport Storage from \"../auth/Storage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar categories = [{\n  backgroundColor: \"#fc5c65\",\n  label: \"School Memories\",\n  Icon: \"school-outline\",\n  value: 1\n}, {\n  backgroundColor: \"#fd9644\",\n  label: \"College memories\",\n  Icon: \"school\",\n  value: 2\n}, {\n  backgroundColor: \"#fed330\",\n  label: \"High school Memories\",\n  Icon: \"teach\",\n  value: 3\n}, {\n  backgroundColor: \"#26de81\",\n  label: \"Job Memories\",\n  Icon: \"briefcase-plus\",\n  value: 4\n}, {\n  backgroundColor: \"#2bcbba\",\n  label: \"Wedding Memories\",\n  Icon: \"flower-poppy\",\n  value: 5\n}];\nvar validationSchema = yup.object().shape({\n  title: yup.string().required().label(\"Title\"),\n  description: yup.string().required().min(1).label(\"Quantity\"),\n  category: yup.string().required().label(\"category\")\n});\n\nfunction AddMemoryScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      uri = _useState4[0],\n      setUri = _useState4[1];\n\n  console.log(uri);\n\n  var addMemory = function addMemory(value) {\n    var memory;\n    return _regeneratorRuntime.async(function addMemory$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(Storage.getMemory());\n\n          case 2:\n            memory = _context.sent;\n            Storage.storeMemory([{\n              id: memory.length + 1,\n              title: value.title,\n              subTitle: value.description,\n              category: value.category,\n              uri: uri\n            }].concat(_toConsumableArray(memory)));\n            navigation.goBack();\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsx(ScrollView, {\n    children: _jsx(View, {\n      style: styles.formStyle,\n      children: _jsxs(AppForm, {\n        initialValues: {\n          title: \"\",\n          description: \"\",\n          category: \"\"\n        },\n        onSubmit: function onSubmit(val) {\n          return addMemory(val);\n        },\n        validationSchema: validationSchema,\n        children: [_jsx(AppFromField, {\n          leftIcon: \"format-title\",\n          placeholder: \"Memory Title\",\n          autoCapitalize: \"none\",\n          name: \"title\"\n        }), _jsx(AppFromField, {\n          placeholder: \"Memory Description\",\n          autoCapitalize: \"none\",\n          autoCorrect: false,\n          name: \"description\",\n          multiline: true,\n          numberOfLines: 2,\n          style: {\n            minHeight: 70\n          },\n          textAlignVertical: \"top\"\n        }), _jsx(AppFromPicker, {\n          name: \"category\",\n          icon: \"quadcopter\",\n          items: categories,\n          placeholder: \"Category\",\n          width: \"70%\",\n          numberOfColoms: 3,\n          PickerItemsComponent: CategoryPickerItems\n        }), _jsx(View, {\n          style: {\n            marginTop: \"2%\"\n          },\n          children: _jsx(ImageInput, {\n            uri: uri,\n            setUri: setUri\n          })\n        }), _jsx(View, {\n          style: styles.nextButton,\n          children: _jsx(SubmitButton, {\n            width: \"99%\",\n            title: \"Add Memory\"\n          })\n        })]\n      })\n    })\n  });\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  formStyle: {\n    flex: 1,\n    marginLeft: 13,\n    marginRight: 13,\n    overflow: \"hidden\"\n  },\n  topInfoIcon: {\n    top: 10,\n    marginBottom: 20,\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  nextButton: {\n    padding: 4,\n    top: 10\n  },\n  specficFormFiledStyle: {\n    color: \"green\",\n    fontWeight: \"bold\",\n    fontSize: 18,\n    fontFamily: Platform.OS === \"android\" ? \"Roboto\" : \"Avenir\"\n  },\n  headerText: {\n    textAlign: \"center\",\n    color: colors.primary,\n    fontWeight: \"bold\",\n    fontSize: 18\n  }\n});\nexport default AddMemoryScreen;","map":{"version":3,"sources":["C:/Users/tonyj/Desktop/Mobile App/MyMemories/src/Screens/AddMemoryScreen.js"],"names":["React","useEffect","useState","yup","colors","AppFromField","CategoryPickerItems","SubmitButton","AppForm","AppFromPicker","ImageInput","Storage","categories","backgroundColor","label","Icon","value","validationSchema","object","shape","title","string","required","description","min","category","AddMemoryScreen","navigation","loading","setLoading","uri","setUri","console","log","addMemory","getMemory","memory","storeMemory","id","length","subTitle","goBack","styles","formStyle","val","minHeight","marginTop","nextButton","StyleSheet","create","container","flex","marginLeft","marginRight","overflow","topInfoIcon","top","marginBottom","flexDirection","alignItems","padding","specficFormFiledStyle","color","fontWeight","fontSize","fontFamily","Platform","OS","headerText","textAlign","primary"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { View, StyleSheet, Text, ScrollView } from \"react-native\";\n\nimport * as yup from \"yup\";\n\nimport colors from \"../config/colors\";\nimport AppFromField from \"../Components/AppFormField\";\nimport CategoryPickerItems from \"../Components/CategoryPickerItems\";\nimport SubmitButton from \"../Components/SubmitButton\";\nimport AppForm from \"../Components/AppForm\";\nimport AppFromPicker from \"../Components/AppFromPicker\";\nimport ImageInput from \"../Components/ImageInput\";\nimport Storage from \"../auth/Storage\";\n\nconst categories = [\n  {\n    backgroundColor: \"#fc5c65\",\n    label: \"School Memories\",\n    Icon: \"school-outline\",\n    value: 1,\n  },\n  {\n    backgroundColor: \"#fd9644\",\n    label: \"College memories\",\n    Icon: \"school\",\n    value: 2,\n  },\n  {\n    backgroundColor: \"#fed330\",\n    label: \"High school Memories\",\n    Icon: \"teach\",\n    value: 3,\n  },\n  {\n    backgroundColor: \"#26de81\",\n    label: \"Job Memories\",\n    Icon: \"briefcase-plus\",\n    value: 4,\n  },\n  {\n    backgroundColor: \"#2bcbba\",\n    label: \"Wedding Memories\",\n    Icon: \"flower-poppy\",\n    value: 5,\n  },\n];\n//Yup Validation Schema\nconst validationSchema = yup.object().shape({\n  title: yup.string().required().label(\"Title\"),\n  description: yup.string().required().min(1).label(\"Quantity\"),\n  category: yup.string().required().label(\"category\"),\n});\n\nfunction AddMemoryScreen({ navigation }) {\n  const [loading, setLoading] = useState(false);\n  const [uri, setUri] = useState(null);\n  console.log(uri);\n\n  // Method to add memory in list\n  const addMemory = async (value) => {\n    //Checks if there is memory in local storage, fetches it.\n    const memory = await Storage.getMemory();\n\n    // Stores new memory into existing memory list\n    // and saves it in to local storage\n    Storage.storeMemory([\n      {\n        id: memory.length + 1,\n        title: value.title,\n        subTitle: value.description,\n        category: value.category,\n        uri: uri,\n      },\n      ...memory,\n    ]);\n    // Moves to home screen after adding new memory.\n    navigation.goBack();\n  };\n\n  return (\n    <ScrollView>\n      <View style={styles.formStyle}>\n        <AppForm\n          initialValues={{\n            title: \"\",\n            description: \"\",\n            category: \"\",\n          }}\n          onSubmit={(val) => addMemory(val)}\n          validationSchema={validationSchema}\n        >\n          {/* <ImageInput name=\"images\" /> */}\n\n          <AppFromField\n            leftIcon=\"format-title\"\n            placeholder=\"Memory Title\"\n            autoCapitalize=\"none\"\n            //autoCorrect={false}\n            name=\"title\"\n          />\n          <AppFromField\n            // leftIcon=\"format-title\"\n            placeholder=\"Memory Description\"\n            autoCapitalize=\"none\"\n            autoCorrect={false}\n            name=\"description\"\n            multiline={true}\n            numberOfLines={2}\n            style={{ minHeight: 70 }}\n            textAlignVertical=\"top\"\n            // alignItems=\"flex-start\"\n          />\n\n          <AppFromPicker\n            name=\"category\"\n            icon=\"quadcopter\"\n            items={categories}\n            placeholder=\"Category\"\n            width=\"70%\"\n            numberOfColoms={3}\n            PickerItemsComponent={CategoryPickerItems}\n          />\n          <View style={{ marginTop: \"2%\" }}>\n            <ImageInput uri={uri} setUri={setUri} />\n          </View>\n\n          <View style={styles.nextButton}>\n            <SubmitButton width={\"99%\"} title=\"Add Memory\" />\n          </View>\n        </AppForm>\n      </View>\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  formStyle: {\n    flex: 1,\n    marginLeft: 13,\n    marginRight: 13,\n    overflow: \"hidden\",\n  },\n  topInfoIcon: {\n    top: 10,\n    marginBottom: 20,\n\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  nextButton: {\n    padding: 4,\n    top: 10,\n  },\n  specficFormFiledStyle: {\n    color: \"green\",\n    fontWeight: \"bold\",\n    fontSize: 18,\n    fontFamily: Platform.OS === \"android\" ? \"Roboto\" : \"Avenir\",\n  },\n  headerText: {\n    textAlign: \"center\",\n    color: colors.primary,\n    fontWeight: \"bold\",\n    fontSize: 18,\n  },\n});\n\nexport default AddMemoryScreen;\n"]},"metadata":{},"sourceType":"module"}