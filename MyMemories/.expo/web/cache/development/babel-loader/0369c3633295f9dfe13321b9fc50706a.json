{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useFocusEffect } from \"@react-navigation/native\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { memoryData } from \"../Data\";\nimport colors from \"../config/colors\";\nimport fontFamily from \"../config/fontFamily\";\nimport Screen from \"../Components/Screen\";\nimport Icon from \"../Components/Icon/Icon\";\nimport MemoryCard from \"../Components/MemoryCard\";\nimport AddMemoryScreen from \"./AddMemoryScreen\";\nimport Storage from \"../auth/Storage\";\nimport AppButton from \"../Components/AppButton\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nconsole.log(\"local\", memoryData);\nexport default function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      memoryList = _useState2[0],\n      setMeoryList = _useState2[1];\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      visible = _React$useState2[0],\n      setVisible = _React$useState2[1];\n\n  var deleteMemory = function deleteMemory(id) {\n    var afterDeleteArray;\n    return _regeneratorRuntime.async(function deleteMemory$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            afterDeleteArray = memoryList.filter(function (mem) {\n              return mem.id !== id;\n            });\n\n            if (!(afterDeleteArray.length < 1)) {\n              _context.next = 7;\n              break;\n            }\n\n            setMeoryList([]);\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(Storage.storeMemory(null));\n\n          case 5:\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(Storage.storeMemory(afterDeleteArray));\n\n          case 9:\n            setMeoryList(afterDeleteArray);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var filterMemory = function filterMemory(category) {\n    var listfromLocalStorage, afterfilterArray;\n    return _regeneratorRuntime.async(function filterMemory$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(Storage.getMemory());\n\n          case 2:\n            listfromLocalStorage = _context2.sent;\n\n            if (category.match(\"none\")) {\n              setMeoryList(listfromLocalStorage);\n            } else {\n              afterfilterArray = listfromLocalStorage.filter(function (mem) {\n                return mem.category.match(category);\n              });\n              setMeoryList(afterfilterArray);\n            }\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var getMemories = function getMemories() {\n    var listfromLocalStorage;\n    return _regeneratorRuntime.async(function getMemories$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(Storage.getMemory());\n\n          case 2:\n            listfromLocalStorage = _context3.sent;\n            console.log(\"asd\", listfromLocalStorage);\n\n            if (!listfromLocalStorage) {\n              _context3.next = 9;\n              break;\n            }\n\n            console.log(\"here\", listfromLocalStorage);\n            setMeoryList(listfromLocalStorage);\n            _context3.next = 13;\n            break;\n\n          case 9:\n            console.log(\"here\");\n            setMeoryList(memoryData);\n            _context3.next = 13;\n            return _regeneratorRuntime.awrap(Storage.storeMemory(memoryData));\n\n          case 13:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useFocusEffect(React.useCallback(function () {\n    getMemories();\n  }, []));\n  var categories = [{\n    backgroundColor: \"#fc5c65\",\n    label: \"School Memories\",\n    Icon: \"school-outline\",\n    value: 1\n  }, {\n    backgroundColor: \"#fd9644\",\n    label: \"College memories\",\n    Icon: \"school\",\n    value: 2\n  }, {\n    backgroundColor: \"#fed330\",\n    label: \"High school Memories\",\n    Icon: \"teach\",\n    value: 3\n  }, {\n    backgroundColor: \"#26de81\",\n    label: \"Job Memories\",\n    Icon: \"briefcase-plus\",\n    value: 4\n  }, {\n    backgroundColor: \"#2bcbba\",\n    label: \"Wedding Memories\",\n    Icon: \"flower-poppy\",\n    value: 5\n  }, {\n    backgroundColor: \"#fc5c65\",\n    label: \"none\",\n    Icon: \"school-outline\",\n    value: 6\n  }];\n  return _jsxs(Screen, {\n    children: [_jsx(Modal, {\n      visible: visible,\n      children: _jsx(_Fragment, {\n        children: _jsxs(Screen, {\n          children: [categories.map(function (cat) {\n            return _jsx(TouchableOpacity, {\n              style: {\n                marginVertical: 10,\n                marginLeft: \"4%\"\n              },\n              onPress: function onPress() {\n                filterMemory(cat.label);\n                setVisible(false);\n              },\n              children: _jsx(Text, {\n                children: cat.label\n              })\n            }, cat.value);\n          }), _jsx(AppButton, {\n            title: \"close\",\n            onPress: function onPress() {\n              return setVisible(false);\n            }\n          })]\n        })\n      })\n    }), _jsxs(View, {\n      style: {\n        flexDirection: \"row\",\n        justifyContent: \"space-evenly\",\n        alignItems: \"center\",\n        backgroundColor: colors.primary,\n        padding: 6,\n        paddingTop: 13,\n        paddingBottom: 13,\n        width: \"97%\",\n        alignSelf: \"center\",\n        borderRadius: 7\n      },\n      children: [_jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate(\"Add memory\");\n        },\n        style: {\n          flex: 0.4\n        },\n        children: _jsx(Icon, {\n          name: \"plus\",\n          color: colors.white,\n          size: 30\n        })\n      }), _jsx(View, {\n        children: _jsx(Text, {\n          children: \" Memory Collection\"\n        })\n      }), _jsxs(View, {\n        style: {\n          flex: 0.4,\n          alignItems: \"flex-end\",\n          flexDirection: \"row\",\n          justifyContent: \"flex-end\"\n        },\n        children: [_jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return setVisible(true);\n          },\n          children: _jsx(Icon, {\n            name: \"filter\",\n            color: colors.white,\n            size: 27\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.navigate(\"profile\");\n          },\n          style: {\n            marginLeft: \"2%\"\n          },\n          children: _jsx(Icon, {\n            name: \"account-details\",\n            color: colors.white,\n            size: 30\n          })\n        })]\n      })]\n    }), _jsx(ScrollView, {\n      children: _jsx(View, {\n        style: {\n          marginTop: \"4%\"\n        },\n        children: _jsx(_Fragment, {\n          children: memoryList.map(function (memory) {\n            return _jsx(View, {\n              style: {\n                marginTop: \"3%\",\n                marginBottom: \"3%\"\n              },\n              children: _jsx(MemoryCard, {\n                image: memory == null ? void 0 : memory.image,\n                uri: memory == null ? void 0 : memory.uri,\n                title: memory.title,\n                category: memory == null ? void 0 : memory.category,\n                subtile: memory.subTitle,\n                onDeletePress: function onDeletePress() {\n                  return deleteMemory(memory.id);\n                },\n                onEditPress: function onEditPress() {\n                  return navigation.navigate(\"Update memory\", {\n                    memory: memory\n                  });\n                }\n              })\n            }, memory.id);\n          })\n        })\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  toggleActive: {\n    marginTop: \"1%\",\n    flexDirection: \"row\",\n    alignSelf: \"center\",\n    zIndex: 1\n  },\n  activeText: {\n    marginTop: \"3%\",\n    marginRight: \"5%\",\n    fontFamily: fontFamily.Poppins_Bold,\n    fontSize: 17,\n    marginLeft: \"7%\"\n  },\n  lastUpdatedLocationText: {\n    marginTop: \"3%\",\n    textAlign: \"center\",\n    alignSelf: \"center\",\n    fontFamily: fontFamily.Poppins_Medium,\n    fontSize: 12\n  },\n  map: {\n    width: Dimensions.get(\"window\").width - 10,\n    height: Dimensions.get(\"window\").height,\n    marginBottom: \"20%\"\n  },\n  offGrid: {\n    backgroundColor: colors.light,\n    alignItems: \"center\",\n    marginBottom: \"2%\"\n  },\n  profileContainer: _objectSpread(_objectSpread({\n    shadowColor: \"#000\",\n    width: \"50%\",\n    alignSelf: \"center\",\n    alignContent: \"center\",\n    backgroundColor: colors.light\n  }, Platform.select({\n    ios: {\n      shadowOffset: {\n        width: 0.2,\n        height: 0.1\n      },\n      shadowOpacity: 0.7,\n      shadowRadius: 2,\n      elevation: 2\n    },\n    android: {\n      shadowOffset: {\n        width: 0.6,\n        height: 0.4\n      },\n      shadowOpacity: 0.7,\n      shadowRadius: 10,\n      elevation: 10\n    }\n  })), {}, {\n    marginTop: \"10%\"\n  }),\n  profileText: {\n    alignSelf: \"center\",\n    textAlign: \"center\",\n    marginLeft: \"7%\",\n    fontWeight: \"bold\",\n    fontSize: 19\n  },\n  updateProfileContainer: {\n    flexDirection: \"row\",\n    alignContent: \"space-between\",\n    padding: 5\n  },\n  logo: {\n    height: 120,\n    width: 200,\n    marginTop: 7,\n    marginBottom: 20,\n    alignSelf: \"center\",\n    padding: 10\n  },\n  relocateUserOnMap: _objectSpread({\n    borderRadius: 50,\n    position: \"absolute\",\n    top: \"88%\",\n    left: \"78%\"\n  }, Platform.select({\n    ios: {\n      shadowColor: \"#000\",\n      shadowOffset: {\n        width: 0.7,\n        height: 0.8\n      },\n      shadowOpacity: 0.4,\n      shadowRadius: 11,\n      elevation: 2\n    },\n    android: {\n      shadowColor: \"#000\",\n      shadowOffset: {\n        width: 0.6,\n        height: 0.8\n      },\n      shadowOpacity: 0.4,\n      shadowRadius: 11,\n      elevation: 2\n    }\n  })),\n  welcomeTextContainer: {\n    marginTop: \"50%\"\n  },\n  welcome: {\n    textAlign: \"center\",\n    fontSize: 25,\n    fontWeight: \"bold\"\n  },\n  logout: _objectSpread(_objectSpread({\n    marginTop: \"3%\"\n  }, Platform.select({\n    ios: {\n      width: \"55%\"\n    },\n    android: {\n      width: \"55%\"\n    }\n  })), {}, {\n    alignSelf: \"center\"\n  }),\n  logOutButton: {\n    backgroundColor: colors.primary,\n    borderRadius: 9\n  },\n  nearBy: {\n    textAlign: \"center\",\n    fontSize: 20,\n    padding: \"5%\",\n    fontFamily: fontFamily.Poppins_Medium\n  },\n  noPeopleContainer: {\n    alignContent: \"center\",\n    alignItems: \"center\",\n    alignSelf: \"center\",\n    marginTop: \"20%\"\n  },\n  SnackbarText: {\n    textAlign: \"center\",\n    fontSize: 16,\n    padding: \"5%\",\n    fontFamily: fontFamily.Poppins_Medium\n  }\n});","map":{"version":3,"sources":["C:/Users/tonyj/Desktop/Mobile App/MyMemories/src/Screens/HomeScreen.js"],"names":["React","useContext","useEffect","useState","useFocusEffect","memoryData","colors","fontFamily","Screen","Icon","MemoryCard","AddMemoryScreen","Storage","AppButton","console","log","HomeScreen","navigation","memoryList","setMeoryList","visible","setVisible","deleteMemory","id","afterDeleteArray","filter","mem","length","storeMemory","filterMemory","category","getMemory","listfromLocalStorage","match","afterfilterArray","getMemories","useCallback","categories","backgroundColor","label","value","map","cat","marginVertical","marginLeft","flexDirection","justifyContent","alignItems","primary","padding","paddingTop","paddingBottom","width","alignSelf","borderRadius","navigate","flex","white","marginTop","memory","marginBottom","image","uri","title","subTitle","styles","StyleSheet","create","container","toggleActive","zIndex","activeText","marginRight","Poppins_Bold","fontSize","lastUpdatedLocationText","textAlign","Poppins_Medium","Dimensions","get","height","offGrid","light","profileContainer","shadowColor","alignContent","Platform","select","ios","shadowOffset","shadowOpacity","shadowRadius","elevation","android","profileText","fontWeight","updateProfileContainer","logo","relocateUserOnMap","position","top","left","welcomeTextContainer","welcome","logout","logOutButton","nearBy","noPeopleContainer","SnackbarText"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { useFocusEffect } from \"@react-navigation/native\";\nimport {\n  View,\n  StyleSheet,\n  Platform,\n  Dimensions,\n  ScrollView,\n  Image,\n  TouchableOpacity,\n  Button,\n  Text,\n  Modal,\n} from \"react-native\";\nimport { memoryData } from \"../Data\";\nimport colors from \"../config/colors\";\n\nimport fontFamily from \"../config/fontFamily\";\n\nimport Screen from \"../Components/Screen\";\n\nimport Icon from \"../Components/Icon/Icon\";\nimport MemoryCard from \"../Components/MemoryCard\";\nimport AddMemoryScreen from \"./AddMemoryScreen\";\nimport Storage from \"../auth/Storage\";\nimport AppButton from \"../Components/AppButton\";\nconsole.log(\"local\", memoryData);\n\nexport default function HomeScreen({ navigation }) {\n  const [memoryList, setMeoryList] = useState([]);\n  const [visible, setVisible] = React.useState(false);\n\n  // This method is used to delete the memory on home screen\n  const deleteMemory = async (id) => {\n    // Filters the array from useState variable which has all the\n    // listing of  memories\n    const afterDeleteArray = memoryList.filter((mem) => mem.id !== id);\n    // console.log(id, afterDeleteArray);\n    // after deletion, store in local storage and in useState variable.\n    // which helps rendering the memory on screen\n    if (afterDeleteArray.length < 1) {\n      setMeoryList([]);\n      await Storage.storeMemory(null);\n    } else {\n      await Storage.storeMemory(afterDeleteArray);\n      setMeoryList(afterDeleteArray);\n    }\n  };\n\n  //Filtering the memory by their name which user select from popup modal.\n\n  const filterMemory = async (category) => {\n    // If nothing is selected, restore the listing from local storage\n    const listfromLocalStorage = await Storage.getMemory();\n    if (category.match(\"none\")) {\n      setMeoryList(listfromLocalStorage);\n    } else {\n      // If category is selected then filter by the category label\n      // storing the filter array in setMemory useState.\n      const afterfilterArray = listfromLocalStorage.filter((mem) =>\n        mem.category.match(category)\n      );\n\n      setMeoryList(afterfilterArray);\n    }\n  };\n  // console.log(memoryList);\n  // This method gets listing from local store - first time.\n  // home screen renders, it is called in useFocusEffect which same as useEffect hook\n  const getMemories = async () => {\n    //if memory list is in local storage. Set it to local state using useState\n    const listfromLocalStorage = await Storage.getMemory();\n    console.log(\"asd\", listfromLocalStorage);\n\n    if (listfromLocalStorage) {\n      console.log(\"here\", listfromLocalStorage);\n\n      setMeoryList(listfromLocalStorage);\n    } else {\n      console.log(\"here\");\n      // otherwise if there is no memory or null, Store hardcode memory list in local storage\n      // and local state\n      setMeoryList(memoryData);\n      await Storage.storeMemory(memoryData);\n    }\n  };\n\n  useFocusEffect(\n    React.useCallback(() => {\n      // Function call to get memory list form local storage\n      getMemories();\n    }, [])\n  );\n  const categories = [\n    {\n      backgroundColor: \"#fc5c65\",\n      label: \"School Memories\",\n      Icon: \"school-outline\",\n      value: 1,\n    },\n    {\n      backgroundColor: \"#fd9644\",\n      label: \"College memories\",\n      Icon: \"school\",\n      value: 2,\n    },\n    {\n      backgroundColor: \"#fed330\",\n      label: \"High school Memories\",\n      Icon: \"teach\",\n      value: 3,\n    },\n    {\n      backgroundColor: \"#26de81\",\n      label: \"Job Memories\",\n      Icon: \"briefcase-plus\",\n      value: 4,\n    },\n    {\n      backgroundColor: \"#2bcbba\",\n      label: \"Wedding Memories\",\n      Icon: \"flower-poppy\",\n      value: 5,\n    },\n    {\n      backgroundColor: \"#fc5c65\",\n      label: \"none\",\n      Icon: \"school-outline\",\n      value: 6,\n    },\n  ];\n  return (\n    <Screen>\n      <Modal visible={visible}>\n        <>\n          <Screen>\n            {categories.map((cat) => (\n              <TouchableOpacity\n                key={cat.value}\n                style={{\n                  marginVertical: 10,\n                  marginLeft: \"4%\",\n                  // backgroundColor: colors.grey,\n                }}\n                onPress={() => {\n                  // this button, filters list by category\n                  filterMemory(cat.label);\n                  setVisible(false);\n                }}\n              >\n                <Text>{cat.label}</Text>\n              </TouchableOpacity>\n            ))}\n            <AppButton title=\"close\" onPress={() => setVisible(false)} />\n          </Screen>\n        </>\n      </Modal>\n      <View\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"space-evenly\",\n          alignItems: \"center\",\n          backgroundColor: colors.primary,\n          padding: 6,\n          paddingTop: 13,\n          paddingBottom: 13,\n          width: \"97%\",\n          alignSelf: \"center\",\n          borderRadius: 7,\n        }}\n      >\n        <TouchableOpacity\n          // this navigates you to add memory screen when you press +\n          onPress={() => navigation.navigate(\"Add memory\")}\n          style={{ flex: 0.4 }}\n        >\n          <Icon name=\"plus\" color={colors.white} size={30} />\n        </TouchableOpacity>\n        <View>\n          <Text> Memory Collection</Text>\n        </View>\n        <View\n          style={{\n            flex: 0.4,\n            alignItems: \"flex-end\",\n            flexDirection: \"row\",\n\n            justifyContent: \"flex-end\",\n          }}\n        >\n          <TouchableOpacity\n            //This button opens the modal for filter category\n            onPress={() => setVisible(true)}\n          >\n            <Icon name=\"filter\" color={colors.white} size={27} />\n          </TouchableOpacity>\n          <TouchableOpacity\n            //This button opens the profile screen\n            onPress={() => navigation.navigate(\"profile\")}\n            style={{ marginLeft: \"2%\" }}\n          >\n            <Icon name=\"account-details\" color={colors.white} size={30} />\n          </TouchableOpacity>\n        </View>\n      </View>\n      <ScrollView>\n        <View style={{ marginTop: \"4%\" }}>\n          {/* Here i am mapping the array of memory with memory card and just passing the data\n            showing memory cards on home screen */}\n          <>\n            {memoryList.map((memory) => (\n              <View\n                key={memory.id}\n                style={{ marginTop: \"3%\", marginBottom: \"3%\" }}\n              >\n                <MemoryCard\n                  image={memory?.image}\n                  uri={memory?.uri}\n                  title={memory.title}\n                  category={memory?.category}\n                  subtile={memory.subTitle}\n                  onDeletePress={() => deleteMemory(memory.id)}\n                  onEditPress={() =>\n                    navigation.navigate(\"Update memory\", { memory: memory })\n                  }\n                />\n              </View>\n            ))}\n          </>\n        </View>\n      </ScrollView>\n      {/* <AddMemoryScreen /> */}\n    </Screen>\n  );\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  toggleActive: {\n    marginTop: \"1%\",\n    flexDirection: \"row\",\n\n    alignSelf: \"center\",\n    zIndex: 1,\n  },\n  activeText: {\n    marginTop: \"3%\",\n    marginRight: \"5%\",\n    fontFamily: fontFamily.Poppins_Bold,\n    fontSize: 17,\n    marginLeft: \"7%\",\n  },\n  lastUpdatedLocationText: {\n    marginTop: \"3%\",\n    textAlign: \"center\",\n    alignSelf: \"center\",\n    fontFamily: fontFamily.Poppins_Medium,\n    fontSize: 12,\n  },\n  map: {\n    width: Dimensions.get(\"window\").width - 10,\n    height: Dimensions.get(\"window\").height,\n    marginBottom: \"20%\",\n  },\n  offGrid: {\n    backgroundColor: colors.light,\n\n    alignItems: \"center\",\n    marginBottom: \"2%\",\n  },\n\n  profileContainer: {\n    shadowColor: \"#000\",\n    width: \"50%\",\n    alignSelf: \"center\",\n    alignContent: \"center\",\n    backgroundColor: colors.light,\n\n    ...Platform.select({\n      ios: {\n        shadowOffset: { width: 0.2, height: 0.1 },\n        shadowOpacity: 0.7,\n        shadowRadius: 2,\n        elevation: 2,\n      },\n      android: {\n        shadowOffset: { width: 0.6, height: 0.4 },\n        shadowOpacity: 0.7,\n        shadowRadius: 10,\n        elevation: 10,\n      },\n    }),\n    marginTop: \"10%\",\n  },\n  profileText: {\n    alignSelf: \"center\",\n    textAlign: \"center\",\n    marginLeft: \"7%\",\n    fontWeight: \"bold\",\n    fontSize: 19,\n  },\n  updateProfileContainer: {\n    flexDirection: \"row\",\n    alignContent: \"space-between\",\n    padding: 5,\n  },\n\n  logo: {\n    height: 120,\n    width: 200,\n    marginTop: 7,\n    marginBottom: 20,\n    alignSelf: \"center\",\n    padding: 10,\n  },\n  relocateUserOnMap: {\n    borderRadius: 50,\n    position: \"absolute\",\n    top: \"88%\",\n    left: \"78%\",\n    ...Platform.select({\n      ios: {\n        shadowColor: \"#000\",\n        shadowOffset: { width: 0.7, height: 0.8 },\n        shadowOpacity: 0.4,\n        shadowRadius: 11,\n        elevation: 2,\n      },\n      android: {\n        shadowColor: \"#000\",\n        shadowOffset: { width: 0.6, height: 0.8 },\n        shadowOpacity: 0.4,\n        shadowRadius: 11,\n        elevation: 2,\n      },\n    }),\n  },\n  welcomeTextContainer: {\n    marginTop: \"50%\",\n  },\n  welcome: {\n    textAlign: \"center\",\n    fontSize: 25,\n    fontWeight: \"bold\",\n  },\n  logout: {\n    marginTop: \"3%\",\n    ...Platform.select({\n      ios: {\n        width: \"55%\",\n      },\n      android: {\n        width: \"55%\",\n      },\n    }),\n\n    alignSelf: \"center\",\n  },\n  logOutButton: {\n    backgroundColor: colors.primary,\n    borderRadius: 9,\n  },\n  nearBy: {\n    textAlign: \"center\",\n    fontSize: 20,\n\n    padding: \"5%\",\n    fontFamily: fontFamily.Poppins_Medium,\n  },\n  noPeopleContainer: {\n    alignContent: \"center\",\n    alignItems: \"center\",\n    alignSelf: \"center\",\n    marginTop: \"20%\",\n  },\n  SnackbarText: {\n    textAlign: \"center\",\n    fontSize: 16,\n    padding: \"5%\",\n    fontFamily: fontFamily.Poppins_Medium,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}