{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"name\", \"editable\", \"width\", \"label\", \"labelFontFamily\", \"onRightIconPress\", \"alignItems\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from \"react\";\nimport { useFormikContext } from \"formik\";\nimport AppTextInput from \"../Components/AppTextInput\";\nimport colors from \"../config/colors\";\nimport ValidationErrorMessage from \"./ValidationErrorMessage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction AppFromField(_ref) {\n  var name = _ref.name,\n      editable = _ref.editable,\n      width = _ref.width,\n      label = _ref.label,\n      _ref$labelFontFamily = _ref.labelFontFamily,\n      labelFontFamily = _ref$labelFontFamily === void 0 ? \"Poppins_Medium\" : _ref$labelFontFamily,\n      onRightIconPress = _ref.onRightIconPress,\n      alignItems = _ref.alignItems,\n      otherProps = _objectWithoutProperties(_ref, _excluded);\n\n  var _useFormikContext = useFormikContext(),\n      handleChange = _useFormikContext.handleChange,\n      setFieldTouched = _useFormikContext.setFieldTouched,\n      touched = _useFormikContext.touched,\n      errors = _useFormikContext.errors;\n\n  return _jsxs(_Fragment, {\n    children: [_jsx(AppTextInput, _objectSpread({\n      alignItems: alignItems,\n      onRightIconPress: onRightIconPress,\n      onBlur: function onBlur() {\n        return setFieldTouched(name);\n      },\n      backgroundColor: colors.white,\n      onChangeText: handleChange(name),\n      width: width,\n      editable: editable\n    }, otherProps)), _jsx(ValidationErrorMessage, {\n      error: errors[name],\n      visible: touched[name]\n    })]\n  });\n}\n\nexport default AppFromField;","map":{"version":3,"sources":["C:/Users/tonyj/Desktop/Mobile App/MyMemories/src/Components/AppFormField.js"],"names":["React","useFormikContext","AppTextInput","colors","ValidationErrorMessage","AppFromField","name","editable","width","label","labelFontFamily","onRightIconPress","alignItems","otherProps","handleChange","setFieldTouched","touched","errors","white"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,QAAjC;AAEA,OAAOC,YAAP;AACA,OAAOC,MAAP;AACA,OAAOC,sBAAP;;;;;AAEA,SAASC,YAAT,OASG;AAAA,MARDC,IAQC,QARDA,IAQC;AAAA,MAPDC,QAOC,QAPDA,QAOC;AAAA,MANDC,KAMC,QANDA,KAMC;AAAA,MALDC,KAKC,QALDA,KAKC;AAAA,kCAJDC,eAIC;AAAA,MAJDA,eAIC,qCAJiB,gBAIjB;AAAA,MAHDC,gBAGC,QAHDA,gBAGC;AAAA,MAFDC,UAEC,QAFDA,UAEC;AAAA,MADEC,UACF;;AACD,0BAA2DZ,gBAAgB,EAA3E;AAAA,MAAQa,YAAR,qBAAQA,YAAR;AAAA,MAAsBC,eAAtB,qBAAsBA,eAAtB;AAAA,MAAuCC,OAAvC,qBAAuCA,OAAvC;AAAA,MAAgDC,MAAhD,qBAAgDA,MAAhD;;AAEA,SACE;AAAA,eACE,KAAC,YAAD;AACE,MAAA,UAAU,EAAEL,UADd;AAEE,MAAA,gBAAgB,EAAED,gBAFpB;AAGE,MAAA,MAAM,EAAE;AAAA,eAAMI,eAAe,CAACT,IAAD,CAArB;AAAA,OAHV;AAIE,MAAA,eAAe,EAAEH,MAAM,CAACe,KAJ1B;AAME,MAAA,YAAY,EAAEJ,YAAY,CAACR,IAAD,CAN5B;AAOE,MAAA,KAAK,EAAEE,KAPT;AAQE,MAAA,QAAQ,EAAED;AARZ,OASMM,UATN,EADF,EAaE,KAAC,sBAAD;AAAwB,MAAA,KAAK,EAAEI,MAAM,CAACX,IAAD,CAArC;AAA6C,MAAA,OAAO,EAAEU,OAAO,CAACV,IAAD;AAA7D,MAbF;AAAA,IADF;AAiBD;;AAED,eAAeD,YAAf","sourcesContent":["import React from \"react\";\nimport { useFormikContext } from \"formik\";\n\nimport AppTextInput from \"../Components/AppTextInput\";\nimport colors from \"../config/colors\";\nimport ValidationErrorMessage from \"./ValidationErrorMessage\";\n\nfunction AppFromField({\n  name,\n  editable,\n  width,\n  label,\n  labelFontFamily = \"Poppins_Medium\",\n  onRightIconPress,\n  alignItems,\n  ...otherProps\n}) {\n  const { handleChange, setFieldTouched, touched, errors } = useFormikContext();\n  //handling formik methods, same methods for get input data\n  return (\n    <>\n      <AppTextInput\n        alignItems={alignItems}\n        onRightIconPress={onRightIconPress}\n        onBlur={() => setFieldTouched(name)}\n        backgroundColor={colors.white}\n        //Sets input data in formik using formik context hook\n        onChangeText={handleChange(name)}\n        width={width}\n        editable={editable}\n        {...otherProps}\n      />\n      {/* this will show error if input text not match with validation schema */}\n      <ValidationErrorMessage error={errors[name]} visible={touched[name]} />\n    </>\n  );\n}\n\nexport default AppFromField;\n"]},"metadata":{},"sourceType":"module"}